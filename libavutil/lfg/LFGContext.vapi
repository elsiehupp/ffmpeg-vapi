/***********************************************************
@brief Lagged Fibonacci PRNG
@copyright 2008 Michael Niedermayer

This file is part of FFmpeg.

FFmpeg is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

FFmpeg is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with FFmpeg; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
***********************************************************/

namespace LibAVUtil {

/***********************************************************
@brief Context structure for the Lagged Fibonacci PRNG.
The exact layout, types and content of this struct may change and should
not be accessed directly. Only its sizeof () is guranteed to stay the same
to allow easy instantiation.
***********************************************************/
[CCode (cname="struct AVLFG", cheader_filename="ffmpeg/libavutil/lfg.h")]
public struct LFGContext {
    [CCode (cname="state")]
    public uint state[64];
    [CCode (cname="index")]
    public int index;

    [CCode (cname="av_lfg_init", cheader_filename="ffmpeg/libavutil/lfg.h")]
    public void av_lfg_init (
        LFGContext c,
        uint seed
    );

    /***********************************************************
    @brief Seed the state of the LFGContext using binary data.

    Return value: 0 on success, negative value (LibAVUtil.ErrorCode) on failure.
    ***********************************************************/
    [CCode (cname="av_lfg_init_from_data", cheader_filename="ffmpeg/libavutil/lfg.h")]
    public int av_lfg_init_from_data (
        LFGContext c,
        uint8[] data,
        uint length
    );

    /***********************************************************
    @brief Get the next random uint 32-bit number using an ALFG.

    Please also consider a simple LCG like state= state*1664525+1013904223,
    it may be good enough and faster for your specific use case.
    ***********************************************************/
    [CCode (cname="av_lfg_get", cheader_filename="ffmpeg/libavutil/lfg.h")]
    public static uint av_lfg_get (
        LFGContext c
    );

    /***********************************************************
    @brief Get the next random uint 32-bit number using a MLFG.

    Please also consider av_lfg_get () above, it is faster.
    ***********************************************************/
    [CCode (cname="av_mlfg_get", cheader_filename="ffmpeg/libavutil/lfg.h")]
    public static uint av_mlfg_get (
        LFGContext c
    );

    /***********************************************************
    @brief Get the next two numbers generated by a Box-Muller Gaussian
    generator using the random numbers issued by lfg.

    @param output_buffer array where the two generated numbers are placed
    ***********************************************************/
    [CCode (cname="av_bmg_get", cheader_filename="ffmpeg/libavutil/lfg.h")]
    public void av_bmg_get (
        LFGContext lfg,
        out double output_buffer[2]
    );
}

} // namespace LibAVUtil
